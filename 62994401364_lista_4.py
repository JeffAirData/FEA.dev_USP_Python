# -*- coding: utf-8 -*-
"""62994401364_lista_4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bFO8iRXEc9PF2-_ojPjc2Cby2kSd0CPu

![WhatsApp%20Image%202023-09-10%20at%2011.20.28.jpeg](attachment:WhatsApp%20Image%202023-09-10%20at%2011.20.28.jpeg)

### Fala devs, blz??

Esta será nossa quarta lista de exercícios para você testar seu conhecimento acerca do conteúdo do MÓDULO 2:

-Introdução a bibliotecas

-Numpy

## INSTRUÇÕES:

A lista deve ser realizada pelo Jupyter Notebook.

Nâo é necessário entregar a lista para afins de certificado dentro da plataforma, entretanto para alunos da USP que queiram participar do processo seletivo ou conseguir créditos AAC (apenas FEANOS) é necessária a entrega de TODAS as listas.

A entrega das listas ou pelo menos sua excecução é recomendada a fim de exercitar todo o conhecimento adquirido do curso.

O DESAFIO é para realmente te desafiar, por isso não desista de tentar e de continuar com o curso, ao longo das listas você verá que cada vez mais você terá ferramentas para completá-lo.

Caso haja alguma dúvida acerca da lista participe das monitorias que serão oferecidas as quintas e sábados das 17h as 18h pelo DISCORD. Caso seu problema não seje resolvido envie uma mensagem para contato.feadev@gmail.com

O gabarito será disponibilizado na plataforma após o término de periodo de envio
"""

## vamos começar??
#O.K.!!!#

"""## QUESTÃO 0

**Simulação de um Cassino**

Você está desenvolvendo um programa de simulação de cassino em Python. Importe a biblioteca random para criar uma função que simule um jogo de roleta. A função deve retornar o número onde a bola da roleta parou.

![Captura%20de%20tela%202023-10-25%20202734.png](attachment:Captura%20de%20tela%202023-10-25%20202734.png)
"""

import random

def simular_roleta():
    # Números da roleta (de 0 a 36)
    numeros_roleta = list(range(37))

    # Gire a roleta e escolha um número aleatório
    numero_vencedor = random.choice(numeros_roleta)

    return numero_vencedor

# Exemplo de uso:
resultado = simular_roleta()
print(f"A bola da roleta parou no número: {resultado}")

"""Além disso, adicione um jogo de cartas ao seu cassino. Crie uma função chamada simular_jogo_de_cartas() que simule um jogo de cartas, como blackjack. A função deve retornar um valor aleatório representando a pontuação do jogador no jogo de cartas, que pode ser de 1 a 21."""

import random

def simular_jogo_de_cartas():
    # Baralho com valores das cartas
    baralho = [2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 11]  # Assume-se que o Ás (11) pode valer 1 ou 11

    # Inicializa a pontuação do jogador
    pontuacao = 0

    # Distribui duas cartas iniciais
    for _ in range(2):
        carta = random.choice(baralho)
        pontuacao += carta

    return pontuacao

# Exemplo de uso:
pontuacao_jogador = simular_jogo_de_cartas()
print(f"A pontuação do jogador no jogo de cartas é: {pontuacao_jogador}")

"""## QUESTÃO 1

O verão está chegando e você já quer colocar uma caixa d´água na sua casa para usar como piscina. Na loja de materiais de construção, o atendente informa que as caixas são vendidas em relação a área que a comporta, Sabendo que você tem um espaço para uma piscina de 5 metros de raio, calcule a área do círculo, e descubra qual caixa comprar.

Lembre-se de que a fórmula para calcular a área de um círculo é A = π * r^2.

![Captura%20de%20tela%202023-10-25%20204500.png](attachment:Captura%20de%20tela%202023-10-25%20204500.png)
"""

import math

# Raio da piscina
raio_da_piscina = 5  # em metros

# Calcula a área da piscina
area_da_piscina = math.pi * (raio_da_piscina ** 2)

print(f"A área da piscina é aproximadamente {area_da_piscina:.2f} metros quadrados")

# Suponha que as caixas d'água sejam vendidas em metros quadrados (área que comportam)
# Vamos escolher uma caixa que comporte a área da piscina
tamanho_da_caixa_dagua = area_da_piscina  # A área da caixa deve ser pelo menos igual à área da piscina

print(f"Você deve comprar uma caixa d'água com pelo menos {tamanho_da_caixa_dagua:.2f} metros quadrados de capacidade.")

"""## QUESTÃO 2

Duvido você fazer um código que tenha como OUTPUT a data exata que você está fazendo essa questão. Vamos descobrir se você é do tipo de pessoa que aproveita o dia para fazer as tarefas ou madruga para completa-las
"""

import datetime

# Obtenha a data e hora atuais
data_hora_atual = datetime.datetime.now()

# Formate a data e hora no formato legível
data_hora_formatada = data_hora_atual.strftime("%Y-%m-%d %H:%M:%S")

print("A data e hora atual são:", data_hora_formatada)

"""## QUESTÃO 3

Você está fazendo uma rifa beneficiente para ajudar uma instituição de caridade do bairro. Está na hora de sortear quem é o grande vencedor de uma ALEXA 3º geração.

Instruções:

lista de nomes: nomes = ["Alice", "Bob", "Carlos", "Diana", "Eva","Henrique", "Isadora", "Leandro", "Patricia","Julia", "Alex"].

Importe a biblioteca random.

Use random.choice() para escolher aleatoriamente um nome da lista.

Exiba o nome escolhido na tela.

![Captura%20de%20tela%202023-10-25%20210513.png](attachment:Captura%20de%20tela%202023-10-25%20210513.png)
"""

import random

nomes = ["Alice", "Bob", "Carlos", "Diana", "Eva", "Henrique", "Isadora", "Leandro", "Patricia", "Julia", "Alex"]

vencedor = random.choice(nomes)

print("O grande vencedor da ALEXA 3ª geração é:", vencedor)

"""## QUESTÃO 4

Os Módulos 6 e 7 abordarão Pandas, entretanto vamos aquecer!!!
Use o Pandas para ler os dados do arquivo CSV que está anexado à lista e criar um DataFrame.
Além disso, vizualize somente as 5 primeiras linhas.
"""

from google.colab import files

uploaded = files.upload()

import pandas as pd

# Lê o arquivo CSV e cria um DataFrame
data = pd.read_csv('expandas.csv', sep='\t')

# Exibe as 5 primeiras linhas do DataFrame
print(data.head())

"""## QUESTÃO 5

**Numpy**

a) Crie um array NumPy que contenha os números inteiros de 1 a 10.
"""

import numpy as np

array_numpy = np.arange(1, 11)
print(array_numpy)

"""b)Realize operações matemáticas simples com dois arrays NumPy (1 a 5) (6 a 10) como adição, subtração, multiplicação e divisão."""

import numpy as np

# Crie os dois arrays NumPy
array1 = np.arange(1, 6)
array2 = np.arange(6, 11)

# Realize operações matemáticas simples
soma = array1 + array2
subtracao = array1 - array2
multiplicacao = array1 * array2
divisao = array1 / array2

# Exiba os resultados
print("Soma:", soma)
print("Subtração:", subtracao)
print("Multiplicação:", multiplicacao)
print("Divisão:", divisao)

"""## QUESTÃO 6

Você é um professor e deseja avaliar o desempenho dos alunos nas provas de matemática e ciências naturais da semana. Crie duas matrizes NumPy, uma representando as notas dos alunos em Matemática e outra em Ciências, e calcule a média de cada disciplina.

![Captura%20de%20tela%202023-10-25%20212239.png](attachment:Captura%20de%20tela%202023-10-25%20212239.png)
"""

import numpy as np

# Notas dos alunos em Matemática
notas_matematica = np.array([8.5, 7.2, 9.0, 6.8, 7.5])

# Notas dos alunos em Ciências Naturais
notas_ciencias = np.array([9.2, 8.9, 7.8, 8.6, 9.5])

# Calcule a média de Matemática e Ciências
media_matematica = np.mean(notas_matematica)
media_ciencias = np.mean(notas_ciencias)

# Exiba as médias
print("Média em Matemática:", media_matematica)
print("Média em Ciências Naturais:", media_ciencias)

"""### DESAFIO

Você está organizando um evento e deseja criar um gráfico visual para mostrar a quantidade de ingressos vendidos para cada categoria. Use o Matplotlib para criar um gráfico de barras simples.

Instruções:

Importe a biblioteca Matplotlib.

Crie duas listas: uma representando as categorias de ingressos e outra representando a quantidade de ingressos vendidos em cada categoria.

![Captura%20de%20tela%202023-10-25%20213144.png](attachment:Captura%20de%20tela%202023-10-25%20213144.png)
"""

# categorias: VIP, Pista, Camarote, Mezanino
# ingressos vendidos por categoria respectivamente: 120, 250, 80, 40

import matplotlib.pyplot as plt

categorias = ["VIP", "Pista", "Camarote", "Mezanino"]
ingressos_vendidos = [120, 250, 80, 40]

plt.bar(categorias, ingressos_vendidos)

plt.xlabel("Categorias de Ingressos")
plt.ylabel("Quantidade de Ingressos Vendidos")
plt.title("Quantidade de Ingressos Vendidos por Categoria")

plt.show()

"""Agora

Crie um gráfico de barras usando a função bar() do Matplotlib para exibir as categorias no eixo x e a quantidade de ingressos vendidos no eixo y.

Adicione rótulos ao eixo x e y usando xlabel() e ylabel().

Defina um título para o gráfico usando title().

Exiba o gráfico usando show()
"""

import matplotlib.pyplot as plt

# Categorias de ingressos
categorias = ["VIP", "Pista", "Camarote", "Mezanino"]

# Quantidade de ingressos vendidos por categoria
ingressos_vendidos = [120, 250, 80, 40]

# Criar o gráfico de barras
plt.bar(categorias, ingressos_vendidos)

# Adicionar rótulos personalizados aos eixos x e y
plt.xlabel("Categorias de Ingressos Vendidos")
plt.ylabel("Quantidade de Ingressos")

# Definir um título de gráfico personalizado
plt.title("Quantidade de Ingressos Vendidos por Categoria no Evento")

# Exibir o gráfico
plt.show()



