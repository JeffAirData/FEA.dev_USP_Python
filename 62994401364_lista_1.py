# -*- coding: utf-8 -*-
"""62994401364_lista_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17rCnXruoyeYL8F6YBej7KjpIdD_6HiLV

![WhatsApp%20Image%202023-09-10%20at%2011.20.28.jpeg](attachment:WhatsApp%20Image%202023-09-10%20at%2011.20.28.jpeg)

### Fala devs, blz??

Esta ser√° nossa primeira lista de exerc√≠cios para voc√™ testar seu conhecimento acerca do conte√∫do do M√ìDULO 2:

-Meu Primeiro Programa em Python


-Estrutura de Dados

## INSTRU√á√ïES:

A lista deve ser realizada pelo Jupyter Notebook.

N√¢o √© necess√°rio entregar a lista para afins de certificado dentro da plataforma, entretanto para alunos da USP que queiram participar do processo seletivo ou conseguir cr√©ditos AAC (apenas FEANOS) √© necess√°ria a entrega de TODAS as listas.

A entrega das listas ou pelo menos sua excecu√ß√£o √© recomendada a fim de exercitar todo o conhecimento adquirido do curso.

O DESAFIO √© para realmente te desafiar, por isso n√£o desista de tentar e de continuar com o curso, ao longo das listas voc√™ ver√° que cada vez mais voc√™ ter√° ferramentas para complet√°-lo.

Caso haja alguma d√∫vida acerca da lista participe das monitorias que ser√£o oferecidas as quintas e s√°bados das 17h as 18h pelo DISCORD. Caso seu problema n√£o seje resolvido envie uma mensagem para contato.feadev@gmail.com

O gabarito ser√° disponibilizado na plataforma ap√≥s o t√©rmino de periodo de envio
"""

## vamos come√ßar??

"""## QUEST√ÉO 0

Todo programador deve saber apenas uma coisa: Pedir para o Python escrever "Hello, Word"
Vamos testar se voc√™ j√° pode ser nomeado como um programador???
"""

print("Hello, World!")

"""E se eu te pedir para criar um c√≥digo que tenha como OUTPUT  (termo comumente usado na programa√ß√£o e na computa√ß√£o em geral para se referir √† sa√≠da de um programa ou processo) o seu n√∫mero favorito? Como seria?"""

print("Meu n√∫mero favorito √©:", 13)

"""## QUEST√ÉO 1

Voc√™ est√° fazendo um pedido no Starbucks e na hora da compra pedem o seu nome completo para te chamarem quando seu pedido estiver pronto. Entretanto a mo√ßa do caixa anota somente o seu primeiro nome. S√≥ depois de ter visto que haviam muitas pessoas na fila com o mesmo nome que o seu, ela te pergunta somente o seu sobrenome.

Na hora de entrega do seu pedido, como o atendente chamar√° por voc√™??

Agora, sua tarefa √© criar um c√≥digo em Python no Jupyter Notebook para combinar o seu primeiro nome e seu sobrenome e exibir o nome completo que o atendente usar√° para chamar voc√™ quando seu pedido estiver pronto.

Seu c√≥digo deve fazer o seguinte:

Declare duas vari√°veis: primeiro_nome e sobrenome.
Atribua um valor ao primeiro_nome representando o primeiro nome que a atendente anotou.
Atribua um valor ao sobrenome representando o sobrenome que a atendente solicitou posteriormente.
Use sua habilidade em Python para combinar essas duas partes e criar o nome completo.
Exiba o nome completo no Jupyter Notebook.

Desafio aceito? Agora, voc√™ est√° pronto para criar o c√≥digo que garantir√° que o atendente do Starbucks chame voc√™ corretamente quando seu pedido estiver pronto! ‚òïü™Ñ

![Captura%20de%20tela%202023-09-24%20140330.png](attachment:Captura%20de%20tela%202023-09-24%20140330.png)
"""

primeiro_nome = "Jefferson"
sobrenome = "Melo"
nome_completo = primeiro_nome + " " + sobrenome
print("Nome completo para chamar no Starbucks:", nome_completo)

"""## QUEST√ÉO 2

Imagine que voc√™ √© um professor de Matem√°tica para crian√ßas do ensino fundamental e um aluno curioso te pergunta:

"Professor, quanto √© 13 + 15 + 16 + 6?"

Voc√™, √© claro, n√£o quer parecer contar nos dedos por baixo da mesa para uma pergunta t√£o simples. Ent√£o, voc√™ decide mostrar toda a sua sabedoria tecnol√≥gica e recorre ao Python para dar a resposta instantaneamente.

Como deve ser o c√≥digo para chegar ao resultado?

![Captura%20de%20tela%202023-09-24%20140141.png](attachment:Captura%20de%20tela%202023-09-24%20140141.png)
"""

# Declare as vari√°veis com os n√∫meros a serem somados:
numero1 = 13
numero2 = 15
numero3 = 16
numero4 = 6

# Realize a soma dos n√∫meros:
soma = numero1 + numero2 + numero3 + numero4

# Exiba o resultado:
print("A soma √©:", soma)

"""## QUEST√ÉO 3

Voc√™ √© um detetive de palavras, conhecido por desvendar enigmas usando manipula√ß√£o de texto. Hoje, voc√™ enfrenta um novo mist√©rio envolvendo uma mensagem secreta. Sua miss√£o √© decifrar essa mensagem usando opera√ß√µes com texto em Python.

Mist√©rio da Mensagem Secreta:

Voc√™ recebeu a seguinte mensagem secreta:
"""

#Mist√©rio: @s4b@d0 3n0c0nd3 3st@ m3n$@g3m. P0d3r14$ d3c1fr@-l@?

"""A mensagem parece confusa, mas voc√™ sabe que ela cont√©m informa√ß√µes importantes. Aqui est√£o as etapas que voc√™ deve seguir para decifrar a mensagem:

Crie uma vari√°vel chamada mensagem e atribua a ela a mensagem secreta fornecida acima.
Use opera√ß√µes de texto em Python para limpar a mensagem, removendo todos os caracteres especiais, n√∫meros e espa√ßos em branco.

Converta a mensagem resultante para letras min√∫sculas.

Agora que a mensagem est√° limpa, voc√™ pode decifr√°-la? A mensagem secreta pode conter uma pista importante!

Crie um c√≥digo em Python no Jupyter Notebook para realizar essas etapas e revelar o que est√° por tr√°s desse mist√©rio! üïµÔ∏è‚Äç‚ôÇÔ∏èüîç
"""

# Mensagem secreta fornecida
mensagem = "#Mist√©rio: @s4b@d0 3n0c0nd3 3st@ m3n$@g3m. P0d3r14$ d3c1fr@-l@?"

# Remover caracteres especiais, n√∫meros e espa√ßos em branco usando replace() v√°rias vezes
mensagem_limpa = mensagem.replace("#", "").replace("@", "").replace("4", "").replace("0", "").replace("3", "").replace("$", "").replace("-", "").replace(" ", "")

# Converter para letras min√∫sculas
mensagem_limpa = mensagem_limpa.lower()

# Exibir a mensagem limpa
print("Mensagem limpa:", mensagem_limpa)

"""## QUEST√ÉO 4

Voc√™ acaba de ingressar no curso de Python do FEA.dev e decide iniciar sua pr√≥pria consultoria. Parab√©ns!!! Voc√™ logo recebe seu primeiro cliente, a pizzaria do bairro. Ela tem um grande objetivo em mente: desbancar a grande ind√∫stria de pizza Baralho's e Pizza Wut. Para isso, vai recorrer √† tecnologia em seus processos.

Sua primeira fun√ß√£o √© criar um sistema que recebe o valor de cada venda de pizza e bebida e imprima o valor final.
"""

# Fun√ß√£o para calcular o valor total da venda
def calcular_valor_venda(pizza, bebida):
    # Pre√ßo das pizzas e bebidas
    preco_pizza = 10  # Pre√ßo de cada pizza
    preco_bebida = 3  # Pre√ßo de cada bebida

    # Calcular o valor total da venda
    total_venda = (pizza * preco_pizza) + (bebida * preco_bebida)

    return total_venda

# Solicitar a quantidade de pizzas e bebidas vendidas
quantidade_pizzas = int(input("Quantidade de pizzas vendidas: "))
quantidade_bebidas = int(input("Quantidade de bebidas vendidas: "))

# Calcular o valor total da venda
valor_total = calcular_valor_venda(quantidade_pizzas, quantidade_bebidas)

# Exibir o valor total da venda
print("Valor total da venda: R$", valor_total)

"""![pizza_batepapo.webp](attachment:pizza_batepapo.webp)

## QUEST√ÉO 5

Excelente! A clientela adorou o programa de fidelidade.
Feito isto, chegou a hora de olhar para os processos internos. A ideia √© automatizar a lista de compra da semana, antes feita no papel.

a) O chef de cozinha resolveu aprender uma receita que utiliza a fermenta√ß√£o natural, de forma que a pizza fique mais pr√≥xima da tradicional italiana. Feito isso, n√£o h√° mais necessidade de utilizar leite, ovos e fermento biol√≥gico para a receita. Retire-os da lista de compras e em seguida, adicione Levain e A√ß√∫car, ingredientes da fermenta√ß√£o natural. Imprima a nova lista.
"""

compras = ['Farinha de Trigo', 'Ovos', 'Fermento Biol√≥gico', 'Leite', 'Calabresa', 'Milho',
           'Champignon', 'Molho de Tomate', 'Frango', 'Requeij√£o', 'Lombo']

# Lista de compras original
compras = ['Farinha de Trigo', 'Ovos', 'Fermento Biol√≥gico', 'Leite', 'Calabresa', 'Milho', 'Champignon', 'Molho de Tomate', 'Frango', 'Requeij√£o', 'Lombo']

# Ingredientes a serem removidos
ingredientes_remover = ['Ovos', 'Fermento Biol√≥gico', 'Leite']

# Ingredientes a serem adicionados
ingredientes_adicionar = ['Levain', 'A√ß√∫car']

# Remover ingredientes da lista de compras
for ingrediente in ingredientes_remover:
    if ingrediente in compras:
        compras.remove(ingrediente)

# Adicionar ingredientes √† lista de compras
compras.extend(ingredientes_adicionar)

# Imprimir a nova lista de compras
print("Nova lista de compras:", compras)

"""b) Enquanto voc√™ estava com o computador ligado, um hacker da pizzaria rival do bairro resolveu atacar sua lista de compras invertendo alguns dos itens, como se v√™ abaixo:

![Captura%20de%20tela%202023-09-24%20135736.png](attachment:Captura%20de%20tela%202023-09-24%20135736.png)

Conserte os valores que foram adulterados e imprima a lista corrigida.
"""

# Lista invertida pelo hacker
sarpmoc = ['ogirT ed ahniraF', 'Calabresa', 'Milho', 'Champignon', 'etamoT ed ohloM', 'Frango',
           'Requeij√£o', 'Lombo', 'niaveL', 'A√ß√∫car']

# Inverter a lista para restaurar a ordem original
sarpmoc.reverse()

# Imprimir a lista restaurada
print("Lista de compras restaurada:", sarpmoc)

"""c) Ap√≥s esse duro golpe, voc√™ percebe que √© necess√°rio guardar as informa√ß√µes importantes em uma estrutura de dados que seja mais segura (isto √©, que n√£o seja mut√°vel). Converta a lista de compras para uma estrutura com estas caracter√≠sticas e imprima o tipo da vari√°vel. &nbsp; Dica: Utilize a fun√ß√£o type() para obter o tipo da vari√°vel"""

# Lista de compras original
compras = ['Farinha de Trigo', 'Calabresa', 'Milho', 'Champignon', 'Molho de Tomate', 'Frango', 'Requeij√£o', 'Lombo', 'Levain', 'A√ß√∫car']

# Converter a lista de compras em uma tupla
compras_tupla = tuple(compras)

# Imprimir o tipo da vari√°vel
print("Tipo da vari√°vel compras_tupla:", type(compras_tupla))

"""![af5addc01d02cc4bc54fd86a456e3dce90d2e4276b59c876cea22cc84e9a4f07_1.jpg](attachment:af5addc01d02cc4bc54fd86a456e3dce90d2e4276b59c876cea22cc84e9a4f07_1.jpg)

## QUEST√ÉO 6

Empresas modernas se importam com ESG (Environmental, Social and Governance). A pizzaria do bairro n√£o seria diferente, e sua miss√£o √© auxiliar a empresa a reduzir as emiss√µes de lixo em sua opera√ß√£o. &nbsp;

![ac137a44f5f8cd3c6126fc8ff8c24fff.jpg](attachment:ac137a44f5f8cd3c6126fc8ff8c24fff.jpg)

O primeiro passo ser√° tornar o panfleto digital, de forma que seja enviado pelas redes sociais e n√£o precise ser impresso e consequentemente descart√°vel. Para demonstrar essa funcionalidade ao dono, voc√™ deve criar um exemplo de panfleto que contenha os sabores de pizza salgadas e doces (separados), tipos de bebida e adicionais, conforme os valores a seguir:
-  Pizzas salgadas: Calabresa, Portuguesa, Mussarela e Pepperoni;
-  Pizzas doces: Prest√≠gio, Chocolate e Doce de Leite;
-  Bebidas: Guaran√°, Cola, Suco de Laranja e Suco de Uva;
-  Adicionais: Bacon, Requeij√£o, Milho e Azeitona

Imprima o panfleto final.
"""

# Pizzas salgadas
pizzas_salgadas = ["Calabresa", "Portuguesa", "Mussarela", "Pepperoni"]

# Pizzas doces
pizzas_doces = ["Prest√≠gio", "Chocolate", "Doce de Leite"]

# Bebidas
bebidas = ["Guaran√°", "Cola", "Suco de Laranja", "Suco de Uva"]

# Adicionais
adicionais = ["Bacon", "Requeij√£o", "Milho", "Azeitona"]

# Imprimir o panfleto
print("Panfleto Digital - Pizzaria do Bairro\n")

print("Sabores de Pizza Salgadas:")
for sabor in pizzas_salgadas:
    print(f"- {sabor}")

print("\nSabores de Pizza Doces:")
for sabor in pizzas_doces:
    print(f"- {sabor}")

print("\nTipos de Bebida:")
for bebida in bebidas:
    print(f"- {bebida}")

print("\nAdicionais:")
for adicional in adicionais:
    print(f"- {adicional}")

"""### DESAFIO

Sucesso! A pizzaria do bairro tornou-se uma multinacional que engoliu todas as concorrentes. Querendo crescer ainda mais, o dono sugere um novo recurso: criar sua pr√≥pria pizza. Para isso, temos um dicion√°rio com todos os ingredientes e seus respectivos pre√ßos. A pizzaria recebeu os seguintes pedidos:
-  1: Massa sem gl√∫ten, molho barbecue, frango, piment√£o e tomate
-  2: Massa tradicional, molho de tomate, atum, mussarela, azeitona, cebola, piment√£o, tomate e borda com queijo
-  3: Massa integral, molho bechamel, cebola, piment√£o, tomate, frango e borda com requeij√£o

Imprima uma lista com todos os itens do pedido e seu pre√ßo final que ser√° retornado ao cliente. Armazene o valor das vendas de forma que n√£o seja poss√≠vel alterar seus valores e imprima.

![8y2cc1flxem91.jpg](attachment:8y2cc1flxem91.jpg)
"""

# Dicion√°rio de pre√ßos dos ingredientes
precos_ingredientes = {
    "Massa sem gl√∫ten": 5.0,
    "Massa tradicional": 4.0,
    "Massa integral": 4.5,
    "Molho barbecue": 2.0,
    "Molho de tomate": 1.5,
    "Atum": 3.0,
    "Mussarela": 2.5,
    "Azeitona": 1.0,
    "Cebola": 1.0,
    "Piment√£o": 1.0,
    "Tomate": 1.0,
    "Borda com queijo": 2.0,
    "Borda com requeij√£o": 2.5,
    "Frango": 3.0,
    "Molho bechamel": 2.0
}

# Pedidos e seus ingredientes
pedidos = {
    1: ["Massa sem gl√∫ten", "Molho barbecue", "Frango", "Piment√£o", "Tomate"],
    2: ["Massa tradicional", "Molho de tomate", "Atum", "Mussarela", "Azeitona", "Cebola", "Piment√£o", "Tomate", "Borda com queijo"],
    3: ["Massa integral", "Molho bechamel", "Cebola", "Piment√£o", "Tomate", "Frango", "Borda com requeij√£o"]
}

# Calcular o pre√ßo total de cada pedido
preco_vendas = {}

for pedido, ingredientes in pedidos.items():
    preco_total = sum([precos_ingredientes[ingrediente] for ingrediente in ingredientes])
    preco_vendas[pedido] = preco_total

# Imprimir os itens do pedido e seus pre√ßos finais
for pedido, ingredientes in pedidos.items():
    print(f"Pedido {pedido}:")
    for ingrediente in ingredientes:
        print(f"- {ingrediente}: R$ {precos_ingredientes[ingrediente]:.2f}")
    print(f"Pre√ßo total: R$ {preco_vendas[pedido]:.2f}")
    print()

# Imprimir o valor total das vendas
valor_total_vendas = sum(preco_vendas.values())
print(f"Valor total das vendas: R$ {valor_total_vendas:.2f}")