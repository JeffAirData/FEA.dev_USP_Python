# -*- coding: utf-8 -*-
"""62994401364_lista_3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zNTKrBJqq2CCdQNws8zoLPqnPYjUsWNO

![WhatsApp%20Image%202023-09-10%20at%2011.20.28.jpeg](attachment:WhatsApp%20Image%202023-09-10%20at%2011.20.28.jpeg)

# Fala devs, blz??

Esta será nossa terceira lista de exercícios para você testar seu conhecimento acerca do conteúdo do MÓDULO 3:

-Funções

## INSTRUÇÕES:

A lista deve ser realizada pelo Jupyter Notebook.

Nâo é necessário entregar a lista para afins de certificado dentro da plataforma, entretanto para alunos da USP que queiram participar do processo seletivo ou conseguir créditos AAC (apenas FEANOS) é necessária a entrega de TODAS as listas.

A entrega das listas ou pelo menos sua excecução é recomendada a fim de exercitar todo o conhecimento adquirido do curso.

O DESAFIO é para realmente te desafiar, por isso não desista de tentar e de continuar com o curso, ao longo das listas você verá que cada vez mais você terá ferramentas para completá-lo.

Caso haja alguma dúvida acerca da lista participe das monitorias que serão oferecidas as quintas e sábados das 17h as 18h pelo DISCORD. Caso seu problema não seje resolvido envie uma mensagem para contato.feadev@gmail.com

O gabarito será disponibilizado na plataforma após o término de periodo de envio
"""

## vamos começar??

"""## QUESTÃO 0

Final do ano chegando e você já quer garantir sua viagem para a Europa, Crie uma função que converta valores euro para real. Considere que 1 euro equivale a 5.33 reais.

Sabendo que hotel + comida + transporte + lazer darão entorno de 4500 euros, quantos reais você deverá guardar na sua poupança para garantir as férias.

![Captura%20de%20tela%202023-10-19%20143306.png](attachment:Captura%20de%20tela%202023-10-19%20143306.png)
"""

#seu código começa aqui

from IPython.display import HTML
largura_maxima = 80

def converter_euro_para_real(valor_em_euro):
    taxa_de_cambio = 5.33  # 1 euro equivale a 5.33 reais
    valor_em_real = valor_em_euro * taxa_de_cambio
    return valor_em_real

#Agora, você pode usar essa função para calcular o total em reais que você precisa para sua viagem. Considerando que você precisa de aproximadamente 4500 euros, podemos calcular o valor correspondente em reais da seguinte maneira:

total_em_euro = 4500
total_em_real = converter_euro_para_real(total_em_euro)
print(f"Para garantir as férias na Europa, você precisará de {total_em_real:.2f} reais na sua poupança.")

"""## QUESTÃO 1

Uma função em Python é uma sequência de códigos que possui nome próprio, executa tarefas específicas e evita repetição de código, podendo ser chamada pelo seu nome. Há funções já determinadas como print() e input(), entretanto, nesta lista de exercícios criaremos nossas próprias funções!

Você adicionou o curso de Python da FEA.Dev em seu currículo e foi contratado como estagiário da empresa HelloWorld. Parabéns! Sua tarefa na empresa é automatizar o máximo de processos possíveis e, para isso, precisará criar muitas funções facilitadoras.

Começaremos com dois exemplos básicos apenas como demonstração.

![Captura%20de%20tela%202023-10-19%20143652.png](attachment:Captura%20de%20tela%202023-10-19%20143652.png)
"""

def slogan():
    print('hello, world!')

#função com parâmetros e retornando um valor
def soma(a, b):
    print (a + b)



slogan()
soma(5, 7) #5 e 7 são argumentos da função soma

"""**a)Parâmetros Opcionais:**

Observando o departamento de contabilidade da HelloWorld, você percebeu que os funcionários passam o dia multiplicando valores e, como um bom programador, resolveu tornar esse processo mais eficiente. Desenvolva a função mult, que retorna a multiplicação dos parâmetros "a", "b", "c" e "d". Porém, a função não precisa necessariamente receber os 4 argumentos. Caso um parâmetro não receba um argumento, ele deve valer 1.
"""

def mult(a = 1, b = 1, c = 1, d = 1):
  return a * b * c * d;

"""**b)Return X Print:**

Antes de tudo, rode todas as células do jupyter.

O CEO da HelloWorld está desesperado, pois não consegue solucionar um erro de código que está impedindo a empresa de continuar funcionando. Assim, ele te ligou para ajudá-lo a corrigir tal erro.
Rode o código abaixo para identificar o erro.
(não altere o código, o erro foi planejado)
"""

mult(soma(5, 5), 10)

"""Reescreva a função soma para que o erro não ocorra. Lembre-se da diferença entre retornar um valor e imprimir um valor."""

#No código fornecido, a função soma imprime o resultado em vez de retorná-lo. Para evitar o erro e permitir que a função mult funcione corretamente, você precisa alterar a função soma para retornar o resultado. Aqui está a correção:

def soma(a, b):
    return a + b

def mult(x, y):
    return x * y

resultado = mult(soma(5, 5), 10)
print(resultado)

"""## QUESTÃO 2

Você está desenvolvendo um jogo de adivinhação muito simples, no qual o jogador tenta adivinhar um número secreto entre 1 e 100.

**Instrução:**

O programa gerará aleatoriamente um número entre 1 e 100 que o jogador deve adivinhar.

O jogador poderá inserir um palpite (um número inteiro) e pressionar "Enter".

O programa fornecerá feedback sobre o palpite do jogador, dizendo se o palpite é muito alto, muito baixo ou correto em relação ao número secreto.

O jogador continuará a adivinhar até acertar o número secreto.

O programa informará quantas tentativas foram necessárias para acertar o número.

![Captura%20de%20tela%202023-10-19%20160227.png](attachment:Captura%20de%20tela%202023-10-19%20160227.png)

**Exemplo**

Bem-vindo ao Jogo de Adivinhação! Tente adivinhar o número secreto entre 1 e 100.

Digite o seu palpite: 50 O número é maior. Tente novamente.

Digite o seu palpite: 25 O número é maior. Tente novamente.

Digite o seu palpite: 37 O número é menor. Tente novamente.

Digite o seu palpite: 42 Parabéns! Você acertou o número secreto 42 em 4 tentativas.
"""

import random

# Gera um número secreto aleatório entre 1 e 100
numero_secreto = random.randint(1, 100)

tentativas = 0

print("Bem-vindo ao jogo de adivinhação! Tente adivinhar o número secreto entre 1 e 100.")

while True:
    # Solicita um palpite ao jogador
    palpite = input("Digite seu palpite: ")

    # Verifica se o palpite é um número inteiro
    if not palpite.isdigit():
        print("Por favor, digite um número inteiro.")
        continue

    palpite = int(palpite)
    tentativas += 1

    # Verifica se o palpite está correto
    if palpite == numero_secreto:
        print(f"Parabéns! Você acertou o número secreto {numero_secreto} em {tentativas} tentativas.")
        break
    elif palpite < numero_secreto:
        print("Seu palpite é muito baixo. Tente novamente.")
    else:
        print("Seu palpite é muito alto. Tente novamente.")

"""## QUESTÃO 3

**Jogo da Forca**

Você está criando um jogo da forca em Python, um jogo popular de adivinhação de palavras. Neste jogo, um jogador tenta adivinhar uma palavra, letra por letra, antes que o enforcado seja completamente desenhado.

**Instrução:**

Crie uma função chamada verificar_letra que aceite dois argumentos: uma palavra secreta e uma letra. A função deve verificar se a letra está presente na palavra secreta. Se a letra estiver na palavra secreta, a função deve retornar True, caso contrário, deve retornar False.

Apenas 1 letra.

![Captura%20de%20tela%202023-10-19%20154009.png](attachment:Captura%20de%20tela%202023-10-19%20154009.png)
"""

def verificar_letra(palavra_secreta, letra):
    """
    Verifica se a letra está presente na palavra secreta. Garante que apenas uma letra seja inserida.

    Args:
        palavra_secreta (str): A palavra secreta a ser adivinhada.
        letra (str): A letra a ser verificada.

    Returns:
        bool: True se a letra estiver presente na palavra secreta, False caso contrário.
    """
    if len(letra) == 1 and letra.isalpha():
        if letra in palavra_secreta:
            return True
    return False

def jogo_da_forca(palavra_secreta):
    """
    Função para jogar o jogo da forca. Aceita a palavra secreta e permite adivinhar letra por letra.

    Args:
        palavra_secreta (str): A palavra que deve ser adivinhada.

    Returns:
        bool: True se a palavra foi adivinhada, False se o jogador perdeu.
    """
    letras_corretas = set()
    tentativas = len(palavra_secreta)  # Número máximo de tentativas

    print("Bem-vindo ao Jogo da Forca!")

    while tentativas > 0:
        palavra_misteriosa = ""
        for letra in palavra_secreta:
            if letra in letras_corretas:
                palavra_misteriosa += letra
            else:
                palavra_misteriosa += "_"

        print(f"Palavra: {palavra_misteriosa}")
        print(f"Tentativas restantes: {tentativas}")

        letra = input("Adivinhe uma letra: ").lower()

        if verificar_letra(palavra_secreta, letra):
            letras_corretas.add(letra)
            if letras_corretas == set(palavra_secreta):
                print(f"Parabéns! Você adivinhou a palavra secreta: '{palavra_secreta}'.")
                return True
        else:
            print(f"A letra '{letra}' não está na palavra secreta ou a entrada é inválida.")
            tentativas -= 1

    print(f"Você perdeu! A palavra secreta era: '{palavra_secreta}'.")
    return False

# Exemplo de uso:
palavra_secreta = "python"
jogo_da_forca(palavra_secreta)

"""# QUESTÃO 4

Você está desenvolvendo uma função que embaralha as letras de uma palavra para criar palavras embaralhadas.

**Instrução:**

Crie uma função chamada embaralhar_palavra que aceite uma palavra como argumento e retorne a mesma palavra com suas letras embaralhadas. Independentemente da entrada ser em maiúsculas ou minúsculas, a saída deve estar sempre em letras minúsculas.

A palavra deve ser: embaralhados

![Captura%20de%20tela%202023-10-19%20154456.png](attachment:Captura%20de%20tela%202023-10-19%20154456.png)
"""

import random

def embaralhar_palavra(palavra):
    # Convertemos a palavra para letras minúsculas
    palavra = palavra.lower()
    # Transformamos a palavra em uma lista de caracteres
    lista_letras = list(palavra)
    # Embaralhamos a lista de letras
    random.shuffle(lista_letras)
    # Juntamos as letras embaralhadas de volta em uma palavra
    palavra_embaralhada = ''.join(lista_letras)
    return palavra_embaralhada

# Exemplo de uso:
palavra_original = "embaralhados"
palavra_embaralhada = embaralhar_palavra(palavra_original)
print(f"Palavra original: {palavra_original}")
print(f"Palavra embaralhada: {palavra_embaralhada}")

"""## QUESTÃO 5

# Você está desenvolvendo uma função chamada eh_numero_par que verifica se um número é par ou ímpar. Esta função ajudará a determinar se um número dado é divisível por 2.

**Instruções:**

Crie uma função chamada eh_numero_par que aceite um número como argumento.

Dentro da função, verifique se o número é divisível por 2. Se for divisível por 2, retorne True. Caso contrário, retorne False.
"""

def eh_numero_par(numero):
    if numero % 2 == 0:
        return True
    else:
        return False

while True:
    try:
        numero = int(input("Digite um número (ou '0' para sair): "))
        if numero == 0:
            break
        if eh_numero_par(numero):
            print(f"{numero} é um número par.")
        else:
            print(f"{numero} é um número ímpar.")
    except ValueError:
        print("Entrada inválida. Por favor, digite um número inteiro.")

"""## QUESTÃO 6

Você está desenvolvendo um sistema para uma sorveteria que permite aos clientes escolherem seus sabores de sorvete favoritos e montar seus próprios sorvetes. Crie uma função que ajude os clientes a escolher os sabores de sorvete.

Crie uma função chamada escolher_sabores que aceite uma lista de sabores de sorvete como argumento. A função deve escolher aleatoriamente um sabor de sorvete da lista e retorná-lo.

![Captura%20de%20tela%202023-10-19%20155418.png](attachment:Captura%20de%20tela%202023-10-19%20155418.png)
"""

import random

def escolher_sabores(sabores_disponiveis):
    if sabores_disponiveis:
        sabor_escolhido = random.choice(sabores_disponiveis)
        return sabor_escolhido
    else:
        return None

# Lista de sabores disponíveis
sabores_disponiveis = ["Baunilha", "Chocolate", "Morango", "Creme", "Café", "Chocolate com menta", "Milho"]

# Exemplo de uso
sabor_escolhido = escolher_sabores(sabores_disponiveis)
if sabor_escolhido:
    print(f"Seu sabor escolhido é: {sabor_escolhido}")
else:
    print("Desculpe, não há sabores disponíveis no momento.")

"""# Questão 7

Você está desenvolvendo uma aplicação de gerenciamento de eventos para auxiliar pessoas a planejarem seus compromissos mensais. Para isso, é essencial criar uma função que gera um calendário mensal para que os usuários possam visualizar os dias da semana e planejar seus eventos.

Crie uma função chamada gerar_calendario_mensal que aceita dois argumentos: o ano e o mês para o qual você deseja gerar um calendário. A função deve retornar uma representação do calendário do mês especificado, exibindo os dias da semana e os números dos dias do mês.

![Captura%20de%20tela%202023-10-19%20160340.png](attachment:Captura%20de%20tela%202023-10-19%20160340.png)
"""

import calendar

def gerar_calendario_mensal(ano, mes):
    calendario = calendar.month(ano, mes)
    return calendario

# Exemplo de uso:
ano = 2023
mes = 10  # Outubro

calendario_mensal = gerar_calendario_mensal(ano, mes)
print(calendario_mensal)

"""# Questão 8

É outubrooooo!!!!!
Você está se preparando para o Halloween e deseja criar um programa para contar a quantidade de doces que você coletou durante o "doces ou travessuras". Crie uma função que simule a contagem de doces.

Crie uma função chamada contar_doces que aceite uma lista de tipos de doces como argumento. A função deve contar quantas vezes cada tipo de doce aparece na lista e retornar um dicionário onde as chaves são os tipos de doces e os valores são as quantidades correspondentes.
"""

def contar_doces(lista_de_doces):
    contagem = {}
    for doce in lista_de_doces:
        doce = doce.lower()  # Convertendo para letras minúsculas para tratar tipos de doce de forma insensível a maiúsculas/minúsculas
        if doce in contagem:
            contagem[doce] += 1
        else:
            contagem[doce] = 1
    return contagem

# Exemplo de uso com os tipos de doces fornecidos
doces_coletados = ["chocolate", "chocolate", "pirulito", "caramelo", "pirulito", "pirulito"]
contagem_de_doces = contar_doces(doces_coletados)

print(contagem_de_doces)

"""# DESAFIO

Quem não gosta de jogar um bingo na igreja e ganhar uns potes de plásticos maneiros???
Vamos jogar no Python? Crie um jogo de bingo onde a pessoa deve pressionar "Enter" para sortear cada número. Os números sorteados estão limitados a um intervalo de 1 a 20.

Instruções:

Crie uma função chamada sortear_bingo que não aceita argumentos.

Inicialize uma lista vazia chamada numeros_sorteados para acompanhar os números sorteados.

Inicialize uma cartela de bingo com números de 1 a 20. A cartela pode ser uma lista de 2 listas com 5 números cada. Cada número deve ser único na cartela.

Utilize um loop para simular o sorteio de números de 1 a 20. Certifique-se de que os números sorteados sejam únicos.

Exiba cada número sorteado na tela e a cartela do jogador.

Peça à pessoa que pressione "Enter" para sortear o próximo número a cada rodada.

Marque o número sorteado na cartela do jogador.

Continue o sorteio até que todos os números de 1 a 20 tenham sido sorteados. Quando isso acontecer, exiba "Bingo!".

sua cartela será:

![Captura%20de%20tela%202023-10-19%20152736.png](attachment:Captura%20de%20tela%202023-10-19%20152736.png)
"""

cartela_jogador = [
    [1,8,10],
    [5,3,7],
    [2,6,9],
]

import random

def sortear_bingo():
    numeros_sorteados = []
    cartela_jogador = [
        [1, 8, 10],
        [5, 3, 7],
        [2, 6, 9]
    ]

    print("Bem-vindo ao Jogo de Bingo!")

    while numeros_sorteados != list(range(1, 21)):
        input("Pressione Enter para sortear um número...")
        numero_sorteado = random.randint(1, 20)

        if numero_sorteado not in numeros_sorteados:
            numeros_sorteados.append(numero_sorteado)
            print(f"Número sorteado: {numero_sorteado}")

            for i in range(3):
                for j in range(3):
                    if cartela_jogador[i][j] == numero_sorteado:
                        cartela_jogador[i][j] = "X"

            print("Sua cartela de jogador:")
            for linha in cartela_jogador:
                print(linha)

    print("Bingo!")

# Chama a função para iniciar o jogo de bingo
sortear_bingo()